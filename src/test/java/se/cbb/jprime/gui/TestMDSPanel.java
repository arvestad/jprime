package se.cbb.jprime.gui;

import java.io.IOException;
import java.util.List;

import javax.swing.JFrame;

import mdsj.MDSJ;
import se.cbb.jprime.consensus.day.RobinsonFoulds;
import se.cbb.jprime.io.NewickIOException;
import se.cbb.jprime.io.NewickTree;
import se.cbb.jprime.io.NewickTreeReader;
import se.cbb.jprime.topology.TopologyException;

/**
 * Not a JUnit test case, but a manual app for testing the MDS panel.
 * 
 * @author Joel Sj√∂strand.
 */
public class TestMDSPanel {

	/**
	 * Shows multidimensional scaling based on RF distance matrix for some trees.
	 * @param dists distances.
	 * @throws NewickIOException.
	 * @throws IOException.
	 * @throws TopologyException.
	 */
	public static void main(String[] args) throws NewickIOException, IOException, TopologyException {

		String nwtreesstr =
			"(((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),(((((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6)),(B301_2,(B349_LT33,D31778))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2)))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),(((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2)))),(((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6))),(B301_2,(B349_LT33,D31778))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"(((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),(((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2)))),((((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6)),(B301_2,(B349_LT33,D31778)))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"(((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),((((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6)),((A54_LT16,(A54_LT30,A54_LT6)),(B301_2,(B349_LT33,D31778)))));" +
			"(((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),((((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),B67_SET3CONC),(B33_B9,(B33_SET1CON,B33_SET2CON))),((B117_LT3,B5_set1conc),B411_n2))),(((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6))),(B301_2,(B349_LT33,D31778))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"(((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),(((B33_B9,B33_SET2CON),B33_SET1CON),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),(((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6))),(B301_2,(B349_LT33,D31778))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),(((B33_B9,B33_SET2CON),B33_SET1CON),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),((((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6)),(B301_2,(B349_LT33,D31778)))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),((((B117_LT16,(B117_LT9,(B5_G9,B5_SET2CONC))),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),(((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6))),((A54_LT16,(A54_LT30,A54_LT6)),(B301_2,(B349_LT33,D31778))));" +
			"((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),((B117_LT3,B5_set1conc),B411_n2)),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),((((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6)),(B301_2,(B349_LT33,D31778)))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"(((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),(((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6))),(B301_2,(B349_LT33,D31778))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),(((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6))),((A54_LT16,(A54_LT30,A54_LT6)),(B301_2,(B349_LT33,D31778))));" +
			"((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),((B117_LT3,B5_set1conc),B411_n2)),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC))),((((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6)),(B301_2,(B349_LT33,D31778)))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"(((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((B117_LT3,B5_set1conc),B411_n2)),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),B67_SET3CONC),(B33_B9,(B33_SET1CON,B33_SET2CON)))),((((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6)),(B301_2,(B349_LT33,D31778)))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"(((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),((((B117_LT16,(B117_LT9,(B5_G9,B5_SET2CONC))),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),(((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6))),(B301_2,(B349_LT33,D31778))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"(((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),(((((B117_LT16,(B5_G9,B5_SET2CONC)),B117_LT9),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),(((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6))),(B301_2,(B349_LT33,D31778))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),((((B117_LT16,(B117_LT9,(B5_G9,B5_SET2CONC))),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),((((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6)),(B301_2,(B349_LT33,D31778)))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),(((((B117_LT16,(B5_G9,B5_SET2CONC)),B117_LT9),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),((((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6)),(B301_2,(B349_LT33,D31778)))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),((((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6)),(B301_2,(B349_LT33,D31778)))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"(((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),(((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6))),(B301_2,(B349_LT33,D31778))),(A54_LT16,(A54_LT30,A54_LT6)));" +
			"((((((A204_LT11,A204_LT3),((A229_LT12,A229_LT25),((A241_28,A241_9),B67_set1conc))),((A204_LT2,D31780),(((A241_16,A241_LT2),(B67_B7,B67_SET2CONC)),(A241_38,A241_L1)))),(((((B117_LT16,B117_LT9),(B5_G9,B5_SET2CONC)),B411_LT12),((B33_B9,(B33_SET1CON,B33_SET2CON)),B67_SET3CONC)),((B117_LT3,B5_set1conc),B411_n2))),((((A229_LT23,A229_LT9),(D31779,D31781)),(((B344_LT1,B361_LT26),B344_LT17),B497_LT6)),(B301_2,(B349_LT33,D31778)))),(A54_LT16,(A54_LT30,A54_LT6)));";


		double[] weights = new double[] { 26, 28, 29, 30, 32, 39, 42, 43, 51, 52, 59, 70, 93, 105, 118, 120, 134, 165, 372, 544};

		List<NewickTree> nwtrees = NewickTreeReader.readTrees(nwtreesstr, false);
		double[][] dists = RobinsonFoulds.computeDistanceMatrix(nwtrees, false);
		int n = dists[0].length;
		double[][] coords = MDSJ.classicalScaling(dists);
			
		String[] labels = new String[n];
		for (int i = 0; i < n; ++i) {
			labels[i] = "T" + i;
		}
		
		// Show window.
		JFrame frame = new JFrame("Robinson-Foulds metric MDS test");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().add(new MDSPanel(labels, coords, weights, 800, 600));
        frame.setSize(800, 600);
        frame.setVisible(true);
	}
}
